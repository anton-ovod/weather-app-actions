name: Build, Scan and Push Docker Image to GHCR

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build-scan-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write # for GHCR
      security-events: write # for Docker Scout reports

    env:
      GHCR_IMAGE: ghcr.io/${{ github.repository_owner }}/weather-app
      CACHE_IMAGE: ${{ vars.DOCKERHUB_USERNAME }}/cache:weather-app

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.GHCR_IMAGE }}
          flavor: latest=false
          tags: |
            type=semver,pattern={{version}}
            type=sha,format=short,prefix=sha-

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push to GHCR (but only to local Docker cache, not public)
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: false # do not push yet
          load: true
          cache-from: type=registry,ref=${{ env.CACHE_IMAGE }}
          cache-to: type=registry,ref=${{ env.CACHE_IMAGE }},mode=max
          tags: ${{ steps.meta.outputs.tags }}

      - name: Docker Scout CVE Scan
        id: scout
        uses: docker/scout-action@v1
        with:
          command: cves
          image: ${{ env.GHCR_IMAGE }}:${{ steps.meta.outputs.version }}
          only-severities: critical,high
          exit-code: true # Fail on high/critical
          sarif-file: scout-report.sarif

      - name: Upload SARIF to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: scout-report.sarif

      - name: Push to GHCR (only if scan passed)
        if: success()
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          cache-from: type=registry,ref=${{ env.CACHE_IMAGE }}
          cache-to: type=registry,ref=${{ env.CACHE_IMAGE }},mode=max
          tags: ${{ steps.meta.outputs.tags }}
